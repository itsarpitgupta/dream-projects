from com.deepvision.tools.ContourDetection import ContourDetectiondef main():    print("In Main");    """    # Tool:1 testing single object    main_img = 'D:\github-repos\dream-projects\deep-vision-py\DATA\Image00111.BMP'    temp_img = 'D:\github-repos\dream-projects\deep-vision-py\DATA\\template.jpg'    # All the 6 methods for comparison in a list    methods = ['cv2.TM_CCOEFF', 'cv2.TM_CCOEFF_NORMED', 'cv2.TM_CCORR','cv2.TM_CCORR_NORMED', 'cv2.TM_SQDIFF', 'cv2.TM_SQDIFF_NORMED']    for m in methods:        temp.matchTemplateWithSingleObject(main_img,temp_img,m)    """    """    # Tool:2 testing multiple object    main_img = 'D:\github-repos\dream-projects\deep-vision-py\DATA\\full.jpg'    temp_img = 'D:\github-repos\dream-projects\deep-vision-py\DATA\\coin.jpg'    temp.matchTemplateWithMultipleObject(main_img,temp_img)    """    """    # Tool:3 corner detection    main_img = 'D:\github-repos\dream-projects\deep-vision-py\DATA\Image00111.BMP'    # Need to write code here.        # Tool:4 Contour detection    main_img = 'D:\github-repos\dream-projects\deep-vision-py\DATA\internal_external.png'    contour = ContourDetection();    # External Contour Detection    type = 'EXTERNAL';    contour.detectExternalInternalContour(main_img,type);    #Internal Contour Detection    type = 'INTERNAL';    contour.detectExternalInternalContour(main_img, type);    """if __name__ == "__main__":    main();