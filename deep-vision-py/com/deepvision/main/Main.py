from com.deepvision.tools.TemplateMatching import TemplateMatchingfrom com.deepvision.tools.CornerDetection import CornerDetectiondef main():    print("In Main");    temp = TemplateMatching();    # Tool:1 testing single object    main_img = 'D:\github-repos\dream-projects\deep-vision-py\DATA\Image00111.BMP'    temp_img = 'D:\github-repos\dream-projects\deep-vision-py\DATA\\template.jpg'    # All the 6 methods for comparison in a list    methods = ['cv2.TM_CCOEFF', 'cv2.TM_CCOEFF_NORMED', 'cv2.TM_CCORR','cv2.TM_CCORR_NORMED', 'cv2.TM_SQDIFF', 'cv2.TM_SQDIFF_NORMED']    # for m in methods:        # temp.matchTemplateWithSingleObject(main_img,temp_img,m)    # Tool:2 testing multiple object    main_img = 'D:\github-repos\dream-projects\deep-vision-py\DATA\\full.jpg'    temp_img = 'D:\github-repos\dream-projects\deep-vision-py\DATA\\coin.jpg'    # temp.matchTemplateWithMultipleObject(main_img,temp_img)    # Tool:3 corner detection    main_img = 'D:\github-repos\dream-projects\deep-vision-py\DATA\Image00111.BMP'    cd = CornerDetection();    cd.detectCorners(main_img);if __name__ == "__main__":    main();